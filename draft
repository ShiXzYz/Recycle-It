import pygame
import random

pygame.init()

# Set up the drawing window
# Run until the user asks to quit
running = True
timer = pygame.time.Clock()
WIDTH = 1000
HEIGHT = 600
fps = 60
screen = pygame.display.set_mode([WIDTH, HEIGHT])

#backgrounds
title = pygame.image.load('title.png').convert_alpha()
bg1 = pygame.image.load('bg1.png').convert_alpha()
bg2 = pygame.image.load('bg2.png').convert_alpha()
button = pygame.image.load('start.png').convert_alpha()

current_screen = title

pygame.display.set_caption('Hoos Recycle')
class HealthBar():
  def __init__(self, x, y, w, h, max_hp):
    self.x = x
    self.y = y
    self.w = w
    self.h = h
    self.hp = max_hp
    self.max_hp = max_hp

  def draw(self, surface):
    #calculate health ratio
    ratio = self.hp / self.max_hp
    pygame.draw.rect(surface, "red", (self.x, self.y, self.w, self.h))
    pygame.draw.rect(surface, "green", (self.x, self.y, self.w * ratio, self.h))
health_bar = HealthBar(680, 10, 300, 40, 100)

pygame.mouse.set_visible(False)

#Image file loads
hand = pygame.image.load("hand.webp")
edit_hand = pygame.transform.scale(hand, (20, 20))
rect_hand = edit_hand.get_rect()

soda = pygame.image.load("soda.png")
edit_soda = pygame.transform.scale(soda, (100, 100))


trash = []
x = random.randint(50, 850)
y = random.randint(50, 250)
item = edit_soda.get_rect()
item.x = x
item.y = y
trash.append(item)
active_item = None


rec0 = pygame.Rect(50, 400, 100, 175)
rec1 = pygame.Rect(250, 400, 100, 175)
rec2 = pygame.Rect(450, 400, 100, 175)
rec3 = pygame.Rect(650, 400, 100, 175)
rec4 = pygame.Rect(850, 400, 100, 175)

run = True

health_bar.hp = 100

while running:
    # Did the user click the window close button?
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_SPACE:
                if current_screen == title:
                    current_screen = bg1
                elif current_screen == bg1:
                    current_screen = bg2

    screen.blit(current_screen, (0,0))
    pygame.display.flip()
    pygame.display.update()

    while current_screen == bg2:
        for event in pygame.event.get():
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_SPACE:
                    screen.fill('white')
                    timer.tick(fps)
                    mouse_position = pygame.mouse.get_pos()

                    health_bar.draw(screen)

                    for item in trash:
                        screen.blit(edit_soda, item)

                    rec0 = pygame.draw.rect(screen, "green", rec0)
                    rec1 = pygame.draw.rect(screen, "green", rec1)
                    rec2 = pygame.draw.rect(screen, "green", rec2)
                    rec3 = pygame.draw.rect(screen, "green", rec3)
                    rec4 = pygame.draw.rect(screen, "green", rec4)

                    screen.blit(edit_hand, mouse_position)

                    # print(pygame.mouse.get_pressed())
                    left_clicked = pygame.mouse.get_pressed()[0]

                    for item in trash:
                        if not left_clicked and item.colliderect(rec0):
                            health_bar.hp = 0
                            edit_soda = pygame.transform.scale(soda, (0, 0))

                    # print(counter)

                    for event in pygame.event.get():
                        if event.type == pygame.MOUSEBUTTONDOWN:
                            if event.button == 1:
                                for num, item in enumerate(trash):
                                    if item.collidepoint(event.pos):
                                        active_item = num
                        if event.type == pygame.MOUSEBUTTONUP:
                            if event.button == 1:
                                active_item = None
                        if event.type == pygame.MOUSEMOTION:
                            if active_item != None:
                                trash[active_item].move_ip(event.rel)
                        if event.type == pygame.QUIT:
                            run = False
                        if event.type == pygame.KEYDOWN:
                            if event.key == pygame.K_ESCAPE:
                                run = False
                        # if event.key == pygame.K_r:
                        # do nothing for now

                    pygame.display.flip()

# Done! Time to quit.
pygame.quit()
