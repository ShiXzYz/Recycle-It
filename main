import pygame
import random

pygame.init()

WIDTH = 1000
HEIGHT = 600
fps = 60
timer = pygame.time.Clock()
screen = pygame.display.set_mode([WIDTH, HEIGHT])

pygame.display.set_caption('Hoos Recycle')
class HealthBar():
  def __init__(self, x, y, w, h, max_hp):
    self.x = x
    self.y = y
    self.w = w
    self.h = h
    self.hp = max_hp
    self.max_hp = max_hp

  def draw(self, surface):
    #calculate health ratio
    ratio = self.hp / self.max_hp
    pygame.draw.rect(surface, "red", (self.x, self.y, self.w, self.h))
    pygame.draw.rect(surface, "green", (self.x, self.y, self.w * ratio, self.h))
health_bar = HealthBar(680, 10, 300, 40, 100)

class can():
	def __init__(self):
		soda = pygame.image.load("soda.png")
		edit_soda = pygame.transform.scale(soda, (100, 100))
		rect_soda = edit_soda.get_rect()
'''class pizza():
class nail():
class paper():
class watermelon():
class battery():
class glasses():
class notebook():
class fork():
class leaves():
'''

pygame.mouse.set_visible(False)

#Image file loads
hand = pygame.image.load("images/hand.webp")
edit_hand = pygame.transform.scale(hand, (20, 20))
rect_hand = edit_hand.get_rect()

soda = pygame.image.load("images/soda.png")
edit_soda = pygame.transform.scale(soda, (100, 100))
rect_soda = edit_soda.get_rect()

lf = pygame.image.load("images/landfill.png")
edit_lf = pygame.transform.scale(lf, (100, 175))
rect_lf = edit_lf.get_rect()

ow = pygame.image.load("images/organic.png")
edit_ow = pygame.transform.scale(ow, (100, 175))
rect_ow = edit_ow.get_rect()

hw = pygame.image.load("images/haz_organic.png")
edit_hw = pygame.transform.scale(hw, (100, 175))
rect_hw = edit_hw.get_rect()

pl = pygame.image.load("images/Plastic.png")
edit_pl = pygame.transform.scale(pl, (100, 175))
rect_pl = edit_pl.get_rect()

pb = pygame.image.load("images/PaperBin.png")
edit_pb = pygame.transform.scale(pb, (100, 175))
rect_pb = edit_pb.get_rect()


trash = []
x = random.randint(50, 850)
y = random.randint(50, 250)
item = edit_soda.get_rect()
item.x = x
item.y = y
trash.append(item)
active_item = None


rec0 = pygame.Rect(50, 400, 100, 175)
rec1 = pygame.Rect(250, 400, 100, 175)
rec2 = pygame.Rect(450, 400, 100, 175)
rec3 = pygame.Rect(650, 400, 100, 175)
rec4 = pygame.Rect(850, 400, 100, 175)

run = True

health_bar.hp = 100

while run:
	screen.fill('white')
	timer.tick(fps)
	mouse_position = pygame.mouse.get_pos()

	health_bar.draw(screen)

	for item in trash:
		screen.blit(edit_soda, item)

	screen.blit(edit_pl, rec0)
	screen.blit(edit_pb, rec1)
	screen.blit(edit_ow, rec2)
	screen.blit(edit_hw, rec3)
	screen.blit(edit_lf, rec4)

	screen.blit(edit_hand, mouse_position)
	

	#print(pygame.mouse.get_pressed())
	left_clicked = pygame.mouse.get_pressed()[0]

	for item in trash:
		if not left_clicked and item.colliderect(rec0):
			health_bar.hp = 0
			edit_soda = pygame.transform.scale(soda, (0, 0))

		#print(counter)

	for event in pygame.event.get():
		if event.type == pygame.MOUSEBUTTONDOWN:
			if event.button == 1:
				for num, item in enumerate(trash):
					if item.collidepoint(event.pos):
						active_item = num
		if event.type == pygame.MOUSEBUTTONUP:
			if event.button == 1:
				active_item = None
		if event.type == pygame.MOUSEMOTION:
			if active_item != None:
				trash[active_item].move_ip(event.rel)
		if event.type == pygame.QUIT:
			run = False
		if event.type == pygame.KEYDOWN:
			if event.key == pygame.K_ESCAPE:
				run = False
			#if event.key == pygame.K_r:
				#do nothing for now

	pygame.display.flip()
pygame.quit()
